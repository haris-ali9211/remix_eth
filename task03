// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;


contract demo  
{

    enum Class
    {
        economy_class,
        first_class,
        business_class
    }

    struct Student
    {
        string name;
        string destination;
        string class;
        Class[] classTypeEnum;
    }

    struct Student1
    {
        string name;
        string destination;
        string class;
        Class[] classTypeEnum;
    }

    // class public u1 = class.economy_class;

    mapping( uint => Student ) public data;
    mapping( uint => Student1 ) public data1;

    function ClassToEcomomic() public
    {
        classType = "Economy Class";
    }

    function ClassToFirst() public
    {
        classType = "First Class";
    }

    function ClassToBusiness() public
    {
        classType = "Business Class";
        
    }

    string public classType = "Economy Class";
    // string public classData = u1;

    // function addClassType(uint _passportId, string memory _name, string memory _destination ,Class a) public
    // {
    //     data1[_passportId] = Student(_name, _destination, classType, a);
    // }

    function setter(uint _passportId, string memory _name, string memory _destination, uint row) public 
    {
        // data[_passportId] = Student(_name, _destination, classType, classTypeEnum[row]); 
        data[_passportId] = Student(_name, _destination, classType, classTypeEnum[row]); 
    }
}
